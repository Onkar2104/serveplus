# version: '3.8'
services:
 db:
   image: postgres:17
   environment:
     POSTGRES_DB: ${DATABASE_NAME}
     POSTGRES_USER: ${DATABASE_USERNAME}
     POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
   ports:
     - "5432:5432"
   volumes:
     - postgres_data:/var/lib/postgresql/data
   env_file:
     - .env

 
 django-web:
   build: 
      context: .
      dockerfile: Dockerfile.backend

   container_name: django-docker
   
   ports:
     - "8000:8000"
   volumes:
     - ./backend:/app
     - ./frontend/build:/app/frontend/build
   depends_on:
     - db
    #  - react-app
   environment:
     DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
     DEBUG: ${DEBUG}
     DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
     DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
     DATABASE_ENGINE: ${DATABASE_ENGINE}
     DATABASE_NAME: ${DATABASE_NAME}
     DATABASE_USERNAME: ${DATABASE_USERNAME}
 
     DATABASE_PASSWORD: ${DATABASE_PASSWORD}
     DATABASE_HOST: ${DATABASE_HOST}
     DATABASE_PORT: ${DATABASE_PORT}
   env_file:
     - .env

 react-app:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: react-app
    depends_on:
      - django-web
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend/
      - /app/frontend/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    stdin_open: true
    tty: true

volumes:
   postgres_data: